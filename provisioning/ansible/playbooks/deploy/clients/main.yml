---
# - name: Setup VNC Server
#   hosts: vnc
#   roles:
#     - role: vnc-server

- name: Customize clients
  hosts: clients
  pre_tasks:
    - debug:
        msg: "{{ desktop_files }}"
  # roles:
    # - role: mate-dconf-settings
    # - role: mate-autostart
    # - role: mate-desktop-background
    # - role: install-mozilla-apps

    # - role: mate-panel-list
    # - role: firefox-autoconfig
    # - role: keepassxc
    # - role: thunderbird-autoconfig
    # - role: libreoffice-macro-security
    #   vars:
    #     disable_macros_execution: '{{ libreoffice_disable_macros_execution | default(false) }}'
    #     macro_security_level: '{{ libreoffice_macro_security_level | default("low") }}'
    # - role: mattermost-client
    #   vars:
    #     username: '{{ client_user.username }}'
    #     mattermost_url: "{{ hostvars['learners'].mattermost_url }}"

    # - role: copy-files
    #   vars:
    #     files_basedir: "{{ local_ansible_dir }}/data/desktop_files/"
    #     files_subfolders: '{{ desktop_files }}'
    #     files_owner: "{{ client_user.username }}"
    #     files_destination: /home/{{ client_user.username }}/Desktop/
    
  tasks:

    - name: Copy desktop files
      ansible.builtin.include_role:
        name: async_git_download
      vars:
        agd_absolute_project_path: "{{ local_ansible_dir }}"
        agd_relative_src_path: "/data/desktop_files/{{ item }}"
        agd_git_token: "{{ gitlab_pat }}"
        agd_data_dest: "/home/{{ client_user.username }}/Desktop/"
        agd_owner: "{{ client_user.username }}"
        agd_group: "{{ client_user.username }}"
        agd_download_mode: content
        agd_mode: "0755"
      with_items: "{{ client_user.desktop_files }}"


# https://git-service.ait.ac.at/sct-cyberrange/packages/acr-base/-/archive/3-fix-ansible-ansible-firefox-autoconfig-accounts/acr-base-3-fix-ansible-ansible-firefox-autoconfig-accounts.tar.gz?path=/provisioning/ansible/data/desktop_files/all/data/desktop_files\&private_token=glpat-EzbUnRBTjBHrVzn7ZvME

# https://git-service.ait.ac.at/sct-cyberrange/packages/acr-base/-/archive/3-fix-ansible-ansible-firefox-autoconfig-accounts/acr-base-3-fix-ansible-ansible-firefox-autoconfig-accounts.zip?path=provisioning/ansible/data/desktop_files

# https://git-service.ait.ac.at/sct-cyberrange/packages/acr-base/-/archive/3-fix-ansible-ansible-firefox-autoconfig-accounts/acr-base-3-fix-ansible-ansible-firefox-autoconfig-accounts.tar.gz

# https://git-service.ait.ac.at/sct-cyberrange/packages/acr-base/-/archive/3-fix-ansible-ansible-firefox-autoconfig-accounts/acr-base-3-fix-ansible-ansible-firefox-autoconfig-accounts.tar.gz?path=/provisioning/ansible/data/desktop_files/all\\&private_token=glpat-EzbUnRBTjBHrVzn7ZvME

# https://git-service.ait.ac.at/sct-cyberrange/packages/acr-base/-/archive/3-fix-ansible-ansible-firefox-autoconfig-accounts/acr-base-3-fix-ansible-ansible-firefox-autoconfig-accounts.tar.gz?path=/provisioning/ansible/data/desktop_files\\&private_token=glpat-EzbUnRBTjBHrVzn7ZvME

  # tasks:
  #   - name: Check if source directories exist
  #     ansible.builtin.stat:
  #       path: '{{ local_ansible_dir }}/data/desktop_files/{{ item }}'
  #     loop: '{{ client_user.desktop_files }}'
  #     delegate_to: localhost
  #     register: dir_stats

  #   - name: Deploy Desktop Files
  #     become: true
  #     ansible.builtin.copy:
  #       src: '{{ local_ansible_dir }}/data/desktop_files/{{ item.item }}'
  #       dest: /home/{{ client_user.username }}/Desktop/
  #       owner: '{{ client_user.username }}'
  #       group: '{{ client_user.username }}'
  #       mode: preserve
  #     loop: '{{ dir_stats.results }}'
  #     when: item.stat.exists
